<!-- La idea es llamar este archivo de la forma:
  $ roslaunch mipr2_gazebo pr2_generic_test_workd.launch surface:="nombre_del_modelo_de_la_superficie"

La superficie por defecto a utilizar es "mesita" -->

<launch>
    <!-- declaro argumentos para usar dentro de los includes -->
    <param name="/use_sim_time" value="true" />
    <arg name="paused" default="true"/>
    <arg name="gazebo_models" default="/home/mexomagno/.gazebo/models"/>
    <!-- Argumentos a recibir por consola de la forma <launchfile.launch> arg:=valor -->
    <arg name="gzclient" default="true"/>
    <arg name="surface" default="mesita"/>          <!-- Para escoger superficie a usar -->
    <arg name="moveit" default="true"/>             <!-- Para iniciar con contexto moveit -->
    <arg name="rviz" default="false"/>              <!-- Para iniciar con RViz -->
    <arg name="quick" default="false"/>             <!-- Para correr mundo con parámetros rápidos -->
    <arg name="cube" default="false" />             <!-- Para spawnear cubo sobre la superficie -->
    
    <!-- Imprimir en pantalla argumentos usados -->
    <node 
        name="echo"
        pkg="mipr2_gazebo"
        type="echo"
        args=       
"'\tGzclient: \t\t$(arg gzclient)\n
\tSuperficie: \t\t$(arg surface)\n
\tContexto Moveit: \t$(arg moveit)\n
\tRviz: \t\t\t$(arg rviz)\n
\tModo rápido: \t\t$(arg quick)\n
\tSpawnear cubo: \t$(arg cube)\n'"
        output="screen"/>



    <!-- Lanzar mundo vacío  -->
    <include file="$(find mipr2_gazebo)/worlds/empty_world_fixed.launch">
        <arg name="gui" value="$(arg gzclient)" />
        <arg name="paused" value="$(arg paused)" />
        <arg name="quick_simulation" value="$(arg quick)" />
    </include>

    <!-- Lanzar el PR2 simulado por gazebo -->
    <include file="$(find mipr2_gazebo)/launch/fixed/pr2_fixed.launch"/>

    <!-- Spawnear superficie especificada -->
    <param name="surface_description" 
        command="$(find xacro)/xacro.py $(arg gazebo_models)/$(arg surface)/model.sdf" />
    <node 
        name="spawn_surface" 
        pkg="gazebo_ros" 
        type="spawn_model" 
        args="-sdf -param surface_description -model $(arg surface) -x 1.1 -y 0 -z 0 -Y 1.5707" 
        respawn="false" 
        output="screen" />
  
    <!-- Spawnear cubo madera -->
      <node
          name="spawn_cube"
          pkg="gazebo_ros"
          type="spawn_model"
          args="-sdf -file /home/mexomagno/.gazebo/models/cubo/model.sdf -model cubo -x 0.9 -y -0.4 -z 0.51"
          respawn="false"
          output="screen"
          if="$(arg cube)" />
      <!-- Subir el torso al máximo -->
    <node 
        name="call_rostopic"
        pkg="rostopic"
        type="rostopic"
        args="pub -r 0.2  /torso_controller/command trajectory_msgs/JointTrajectory &quot; {joint_names: ['torso_lift_joint'], points : [ {positions: [0.34], velocities: [0.1]} ] }&quot;" />

    <!-- Cargar contexto moveit -->
    <include file="$(find mipr2_gazebo)/launch/fixed/moveit_demo_fixed.launch" if="$(arg moveit)">
        <arg name="db" value="false" />
        <arg name="debug" value="false" />
        <arg name="launch_rviz" value="false"/>
    </include>

    <!-- Cargar Rviz -->
    <node
        name="rviz_node"
        pkg="rviz"
        type="rviz"
        args="-d $(find memoria2)/rviz/placing_completo.rviz" 
        if="$(arg rviz)"/>


    <!-- parameters that give you reasonable physics as well as good speed --> 
    <!-- needed so that gripper joint stops on objects instead of oscillating forever-->
    <!-- Comentados por sobreescritura en el archivo .world. Descomentar para comportamiento default -->

    <!--   <node name="sor_pgs_iters" pkg="dynamic_reconfigure" type="dynparam" args="set gazebo sor_pgs_iters 50"/>
    <node name="sor_pgs_w" pkg="dynamic_reconfigure" type="dynparam" args="set gazebo sor_pgs_w 1.0"/>
    <node name="time_step" pkg="dynamic_reconfigure" type="dynparam" args="set gazebo time_step 0.001"/> -->
    <!---->

</launch>
